<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="GO">

   <!-- goboard 삽입 -->
   <insert id="insertgoboard" > <!-- //nextval -->
      insert into tb_goboard(GBUNO, GBTITLE, GBCONTENT,
      GBRECRUITDATE, GBRECRUITAREA,
      GBRECRUITSTATUS, GBRECRUITNUMBER, GBRECRUITGENDER)
      values (
         #{gbUNo},
         #{gbTitle},
         #{gbContent},
         #{gbRecruitDate},
         #{gbRecruitArea},
         #{gbRecruitStatus},
         #{gbRecruitNumber},
         #{gbRecruitGender}
      )
   </insert>
   
   <!-- gocheck 삽입 -->
   <insert id="insertgoage"> <!-- //currval -->
       <foreach collection="list" item="age" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
             INTO tb_gocheck (GCGBNO, GCCATE, GCVALUE)         
            VALUES(tb_goboard_SEQ.CURRVAL, 'age', #{age})
       </foreach>
   </insert>
   
   <insert id="insertgotheme"> 
       <foreach collection="list" item="theme" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
            INTO tb_gocheck (GCGBNO, GCCATE, GCVALUE)         
            VALUES(tb_goboard_SEQ.CURRVAL, 'theme', #{theme})
       </foreach>
   </insert>
   
   <!-- 파일삽입 -->
   <insert id="insertgofile">
          
   </insert>
   
     <!-- golist 전체 출력(default 최신순) -->
   <select id="selectlist" resultType="hashmap">
         select u.uno, u.userid, u.unick, uf.uforiginfilename, uf.ufstoredfilename, 
            g.gbno, g.gbtitle, g.gbwrittendate, g.gbrecruitdate, g.gbrecruitarea, g.gbrecruitstatus, g.gbrecruitgender, g.gblikecnt, 
            LISTAGG(gcvalue, ',') WITHIN group(order by gcvalue) as gcvalue
         from tb_user u , tb_userfile uf, tb_goboard g , tb_gocheck gc
         WHERE uf.ufuno (+) = u.uno
            AND g.gbuno = u.uno
            AND gc.gcgbno = g.gbno
            AND u.uisleave = 0 AND g.gbisdel = 0 
         group by gc.gcgbno, u.uno, u.userid, u.unick, 
            uf.uforiginimgname,  uf.ufstoredfilename, g.gbno, g.gbtitle, g.gbwrittendate, g.gbrecruitdate, g.gblikecnt,
            g.GBRECRUITAREA, g.GBRECRUITSTATUS, g.GBRECRUITGENDER
         order by g.gbwrittendate desc
   </select>
   
   <!-- 검색기능 (리다이렉트) -->
   <select id="selectgosearch" resultType="hashmap">
         select u.uno, u.userid, u.unick, uf.uforiginfilename,  uf.ufstoredfilename,
            g.gbno, g.gbtitle, g.gbwrittendate, g.gbrecruitdate, g.gbrecruitarea, g.gbrecruitstatus, g.gbrecruitgender, g.gblikecnt, 
            LISTAGG(gcvalue, ',') WITHIN group(order by gcvalue) as gcvalue
         from tb_user u , tb_userfile uf, tb_goboard g , tb_gocheck gc
         WHERE uf.ufuno (+) = u.uno
            AND g.gbuno = u.uno
            AND gc.gcgbno = g.gbno
            AND u.uisleave = 0 AND g.gbisdel = 0 
            AND g.gbtitle || g.gbcontent LIKE '%' || #{searchText} || '%'
            
         group by gc.gcgbno, u.uno, u.userid, u.unick, 
            uf.uforiginfilename,  uf.ufstoredfilename, g.gbno, g.gbtitle, g.gbwrittendate, g.gbrecruitdate, g.gblikecnt,
            g.GBRECRUITAREA, g.GBRECRUITSTATUS, g.GBRECRUITGENDER
         order by g.gbwrittendate desc
   </select>
   
   <!-- AJAX검색 -->
   <select id="selectfilter" resultType="hashmap">
         select u.uno, u.userid, u.unick, uf.uforiginfilename, 
            g.gbno, g.gbtitle, g.gbwrittendate, g.gbrecruitdate, g.gbrecruitarea, g.gbrecruitstatus, g.gbrecruitgender, g.gblikecnt, g.gbcontent, 
            LISTAGG(gcvalue, ',') WITHIN group(order by gcvalue) as gcvalue
         from tb_user u , tb_userfile uf, tb_goboard g , tb_gocheck gc
         WHERE uf.ufuno (+) = u.uno
            AND g.gbuno = u.uno
            AND gc.gcgbno = g.gbno
            AND u.uisleave = 0 AND g.gbisdel = 0 
            AND 
            <trim prefix="and (" prefixOverrides="OR" suffix=")">
               <if test="name =='gbRecruitGender' AND name != null"> <!-- 성별 -->
               OR gbrecruitgender = #{value}
               </if>
               <if test="name == 'gbRecruitStatus' AND name != null"> <!-- 상태 -->
               OR gbrecruitstatus = #{value}
               </if>
               <if test="name == 'gbRecruitArea' AND name != null"> <!-- 지역 -->
               OR gbrecruitarea = #{value}
               </if>
               <if test="name == 'gcTheme' AND name != null"> <!-- 여행테마 -->
               OR gcvalue = #{value}
               </if>
               <if test="name == 'gcAgeGroup' AND name != null"> <!-- 연령대 -->
               OR gcvalue = #{value}
               </if>
            </trim>
         group by gc.gcgbno, u.uno, u.userid, u.unick, 
            uf.uforiginfilename, g.gbno, g.gbtitle, g.gbwrittendate, g.gbrecruitdate, g.gblikecnt, g.gbcontent,
            g.GBRECRUITAREA, g.GBRECRUITSTATUS, g.GBRECRUITGENDER
         order by g.gbwrittendate desc
   </select>
   
   
   <select id="selectGoUserInfo" resultType="Map">
   	select BOARD.gbno, BOARD.gbuno, BOARD.gbtitle, BOARD.gbcontent, BOARD.gbwrittendate
    		, U.userId, u.ugender, (to_char(sysdate,'YYYY')-substr(U.ubirth,1,4)+1)age, UF.ufstoredfilename
	from tb_goboard BOARD 
    	join tb_user U on BOARD.gbuno = U.uno  
    	left join tb_userfile UF on UF.ufuno = U.uno  
	where gbno = #{gbNo }
   </select>
   
   
   
</mapper>